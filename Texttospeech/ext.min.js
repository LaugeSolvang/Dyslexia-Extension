const pageToSpeech = {
    data: {
        highlightedText: '',
        speechInProgress: false,
        Audio: null,
    },

    initialize: async () => {
        if (!pageToSpeech.hasText()) {
            return;
        }
        await pageToSpeech.trySpeechApi();
    },

    hasText: () => {
        pageToSpeech.data.highlightedText = window.getSelection().toString();
        if (!pageToSpeech.data.highlightedText) {
            const input = document.createElement("input");
            input.setAttribute("type", "text");
            input.id = "sandbox";
            document.getElementsByTagName("body")[0].appendChild(input);
            const sandbox = document.getElementById("sandbox");
            sandbox.value = "";
            sandbox.style.opacity = 0;
            sandbox.focus();
            if (document.execCommand('paste')) {
                pageToSpeech.data.highlightedText = sandbox.value;
            }
            sandbox.parentNode.removeChild(sandbox);
        }
        return !!pageToSpeech.data.highlightedText;
    },

    trySpeechApi: async () => {
        if (pageToSpeech.data.speechInProgress) {
            pageToSpeech.data.Audio.pause();
        }
        pageToSpeech.data.speechInProgress = true;
        pageToSpeech.data.Audio = new Audio(`http://api.voicerss.org/?key=1f0f6e3bf29646baa68bfb9c1d27e10a&src=${encodeURIComponent(pageToSpeech.data.highlightedText)}`);
        pageToSpeech.data.Audio.addEventListener("error", evt => {
            alert("Sorry, we cannot produce speech right now. Try upgrading your browser!");
        });
        pageToSpeech.data.Audio.play();
        pageToSpeech.data.Audio.onended = () => {
            pageToSpeech.data.speechInProgress = false;
        };
    },

    addHotkeys: () => {
        const activeKeys = {};
        window.onkeydown = window.onkeyup = evt => {
            const e = evt || window.event;
            activeKeys[e.keyCode] = e.type === 'keydown';
            if (activeKeys[16] && activeKeys[84]) { // Shift + T
                pageToSpeech.initialize();
            }
        };
    },
};

// Add event listener for Chrome extension messages
chrome.extension.onMessage.addListener((msg, sender, sendResponse) => {
    if (msg.action === 'pageToSpeech') {
        pageToSpeech.initialize();
    }
});

pageToSpeech.addHotkeys();